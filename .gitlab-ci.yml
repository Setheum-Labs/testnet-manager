stages:
  - test
  - publish

default:
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - kubernetes-parity-build

variables:
  IMAGE_NAME:                      "paritytech/testnet-manager"

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"                           # on commits to main branch
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # on tags (i.e. v1.0, v2.1rc1)

# tests starts containers, we need to run them on kubernetes-parity-build-privileged runners
test:
  stage: test
  image:
    name: python:3.10
  services:
    - docker:dind
  variables:
    # Instruct Testcontainers to use the daemon of DinD.
    DOCKER_HOST: "tcp://docker:2375"
    # Instruct Docker not to start over TLS.
    DOCKER_TLS_CERTDIR: ""
  tags:
    - kubernetes-parity-build-privileged
  script:
    - pip install docker-compose poetry
    - poetry config virtualenvs.in-project true
    - poetry install --no-interaction --no-ansi
    - source .venv/bin/activate
    - python -m pytest

build-push-image:
  stage:                           publish
  <<:                              *publish-refs
  image:                           quay.io/buildah/stable
  variables:
    DOCKER_USER:                   $Docker_Hub_User_Parity
    DOCKER_PASS:                   $Docker_Hub_Pass_Parity
  script:
    # version is either "main-<short_sha>" or tag
    - if [[ $CI_COMMIT_REF_NAME == "main" ]];
        then
          export VERSION=$CI_COMMIT_REF_NAME-${CI_COMMIT_SHORT_SHA};
        else
          export VERSION=$CI_COMMIT_REF_NAME;
        fi
    - test "$DOCKER_USER" -a "$DOCKER_PASS" ||
        ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg IMAGE_NAME="${IMAGE_NAME}"
        --tag "$IMAGE_NAME:latest"
        --tag "$IMAGE_NAME:$VERSION"
        --file $DOCKERFILE .
    # The job will success only on the protected branch
    - echo "$DOCKER_PASS" |
        buildah login --username "$DOCKER_USER" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:latest"
    - buildah push --format=v2s2 "$IMAGE_NAME:$VERSION"
  after_script:
    - buildah logout --all
